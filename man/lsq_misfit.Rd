% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/objective.R
\name{lsq_misfit}
\alias{lsq_misfit}
\title{Least square misfit}
\usage{
lsq_misfit(x, data, jacobian = NULL)
}
\arguments{
\item{x}{numeric or complex vector, computed (simulated) data.}

\item{data}{numeric or complex vector, observed data, must have the same
length as \code{x} (this is the number of quantities of interest).}

\item{jacobian}{numeric or complex matrix, can be \code{NULL}, its number of rows
must equal the length
of \code{x} and \code{data}, its number of columns is the number of parameters in
considered problem.}
}
\value{
List with one or two components:
\itemize{
\item \code{value} numeric scalar;
\item \code{gradient} numeric vector with length equal to \code{ncol(jacobian)}, missing
if \code{jacobian} is \code{NULL}.
}
}
\description{
Least square (quadratic, i.e. Euclidean-distance) misfit (aka loss function)
between \code{x} and \code{data} as function of \code{x}. Additional argument \code{jacobian}
is the Jacobian matrix of the (vector)
quantity of interest with respect to problem parameters. Such matrices are
computed by, e.g., solvers based on adjoint state method.
}
